job "${job_name}" {
  datacenters = ["${datacenter_name}"]
  type        = "service"

  group "minio" {

%{ for config in host_volume_configs ~}
    volume "minio-data" {
      type      = "host"
      source    = "${config.source}"
      read_only = ${config.read_only}
    }
%{ endfor ~}

    network {
      mode = "bridge"
      port "api" {
        to = 9000
      }

      port "web" {
        to = 9001
      }
    }

    service {
      name = "minio"
      tags = [
        "traefik.enable=true",
        "traefik.http.routers.minio.rule=Host(`${minio_hostname}`)",
        "traefik.http.routers.minio.entrypoints=http",
%{ for config in consul_connect_service_configs ~}
        "traefik.consulcatalog.connect=true",
%{ endfor ~}
      ]
%{ for config in consul_service_configs ~}
      port = "api"
%{ endfor ~}
%{ for config in nomad_service_configs ~}
      port     = "api"
      provider = "nomad"
%{ endfor ~}
%{ for config in consul_connect_service_configs ~}
      port = 9000

      connect {
        sidecar_service {}
      }
%{ endfor ~}

      check {
        name     = "service: minio healthcheck"
        type     = "http"
        path     = "/minio/health/live"
        interval = "10s"
        timeout  = "2s"
%{ for config in consul_connect_service_configs ~}
        expose   = true
%{ endfor ~}
      }
    }

    task "minio" {
      driver = "docker"

      config {
        image = "minio/minio:latest"
        args  = ["server", "/data", "--console-address", ":9001"]
      }

      env {
        MINIO_ROOT_USER     = "${minio_user}"
        MINIO_ROOT_PASSWORD = "${minio_password}"
      }

      resources {
        cpu    = ${resources.cpu}
        memory = ${resources.memory}
      }
%{ for config in host_volume_configs ~}
      volume_mount {
        volume      = "minio-data"
        destination = "/data"
        read_only   = ${config.read_only}
      }
%{ endfor ~}
    }
  }
}
