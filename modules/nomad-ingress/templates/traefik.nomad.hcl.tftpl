job "${job_name}" {
  datacenters = ["${datacenter_name}"]
  namespace   = "${namespace}"
  type        = "service"

  group "ingress-controller" {
    network {
      mode = "bridge"
      port "http" {
        static = 80
        to     = 80
      }
      port "https" {
        static = 443
        to     = 443
      }
    }

    ephemeral_disk {
      migrate = true
      size    = 256
      sticky  = true
    }

    service {
      port = "${protocol}"
%{ for c in consul_config ~}
      name = "${c.service_name}"
      connect {
        native = ${c.connect_aware}
%{ for s in c.sidecars ~}
        sidecar_service {}
%{ endfor ~}
      }
%{ endfor ~}
    }

    task "traefik" {
      driver = "docker"

      template {
        data = <<EOF
[api]
  insecure = true
  dashboard = true
  debug = true

[ping]

[log]
  level = "DEBUG"

[serversTransport]
  insecureSkipVerify = true

[entryPoints]
  [entryPoints.http]
    address = ":{{ env `NOMAD_PORT_http` }}"
  [entryPoints.https]
    address = ":{{ env `NOMAD_PORT_https` }}"

%{ for c in acme_config ~}
[certificatesResolvers.letsencrypt.acme]
  email = "${c.acme_email}"
  storage = "{{ env `NOMAD_ALLOC_DIR` }}/acme.json"
  [certificatesResolvers.letsencrypt.acme.dnsChallenge]
    provider = "cloudflare"
%{ endfor ~}

[providers.file]
  filename = "/etc/traefik/dynamic.yml"

%{ for c in nomad_config ~}
[providers.nomad]
  exposedByDefault = false
  [providers.nomad.endpoint]
    address = "${c.address}"
%{ endfor ~}

%{ for c in consul_config ~}
[providers.consulCatalog]
  exposedByDefault = false
  connectAware = ${c.connect_aware}
  serviceName = "${c.service_name}"
  [providers.consulCatalog.endpoint]
    address = "${c.address}"
%{ endfor ~}
EOF
        destination = "local/traefik.toml"
      }

      template {
        data        = <<EOF
${static_routes}
EOF
        destination = "local/dynamic.yml"
        change_mode = "restart"
      }

      template {
        data = <<EOF
%{ for c in acme_config ~}
          CF_DNS_API_TOKEN=${c.cf_api_token}
%{ endfor ~}

        EOF
        destination = "local/.env"
        env = true
      }

      config {
        image = "traefik:${version}"
        args = [
          "--configfile=$${NOMAD_TASK_DIR}/traefik.toml"
        ]

        mount {
          type   = "bind"
          source = "local/dynamic.yml"
          target = "/etc/traefik/dynamic.yml"
        }

        ports = ["http", "https"]
      }
    }
  }
}
