job "${job_name}" {
  datacenters = ["${datacenter_name}"]
  namespace   = "${namespace}"
  type        = "service"

  group "temporal" {
    network {
      mode = "bridge"
      port "temporal" {
        to = 7233
      }
    }
    service {
      provider = "nomad"
      name     = "${service_name}"
      port     = "temporal"
    }
    task "temporal" {
      driver = "docker"
      config {
        image = "temporalio/auto-setup:${temporal_version}"
        ports = ["temporal"]
      }
      template {
        data        = <<-EOT
        DB=postgres12
        POSTGRES_SEEDS=${db_host}
        DB_PORT=${db_port}
        POSTGRES_USER=${db_user}
        POSTGRES_PWD=${db_password}
        DBNAME=${db_name}
        VISIBILITY_DBNAME=${visibility_db_name}
        SKIP_DB_CREATE=true
        ENABLE_ES=false
        DYNAMIC_CONFIG_FILE_PATH=/local/dynamicconfig.yaml
        EOT
        destination = "secrets/.env"
        env         = true
      }
      template {
        data = <<-EOT
        limit.maxIDLength:
          - value: 255
            constraints: {}
        EOT
        destination = "local/dynamicconfig.yaml"
      }
    }
  }

  group "temporal-ui" {
    network {
      mode = "bridge"
      port "temporal-ui" {
        to = 8080
      }
    }
    service {
      provider = "nomad"
      name     = "${service_name}-ui"
      port     = "temporal-ui"
    }
    task "temporal-ui" {
      driver = "docker"
      config {
        image = "temporalio/ui:${temporal_ui_version}"
        ports = ["temporal-ui"]
      }
      env {
        TEMPORAL_CORS_ORIGINS = "http://localhost:3000"
      }
      template {
        data        = <<-EOT
        TEMPORAL_ADDRESS={{ with nomadService "${service_name}" }}{{ with index . 0 }}{{ .Address }}:{{ .Port }}{{ end }}{{ end }}
        EOT
        destination = "secrets/.env"
        env         = true
      }
    }
  }
}
